{{- if and .Values.enabled .Values.kernelCollector.enabled }}
# kernel collector daemonset: deploys the kernel collector to each node in the cluster.
# The kernel collector needs to be able to compile and install
# eBPF programs in the node's kernel, so needs to run as root and
# needs to mount /lib/modules and /usr/src from the node itself.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "appdynamics-network-monitoring-kernel-collector.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "appdynamics-network-monitoring-kernel-collector.fullname" . }}
    helm.sh/chart: {{ include "appdynamics-network-monitoring.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "appdynamics-network-monitoring-kernel-collector.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "appdynamics-network-monitoring-kernel-collector.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.kernelCollector.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8}}
    {{- end }}
      containers:
        - name: kernel-collector
          image: "{{ .Values.kernelCollector.image }}"
          imagePullPolicy: {{ .Values.kernelCollector.imagePullPolicy }}
          args:
            - --disable-nomad-metadata
            {{- if .Values.log.console }}
            - --log-console
            {{- end }}
            {{- if hasKey .Values.log "level" }}
            - --{{ .Values.log.level }}
            {{- end }}
          env:
            - name: "EBPF_NET_KERNEL_HEADERS_AUTO_FETCH"
              value: "true"
            - name: "EBPF_NET_INTAKE_HOST"
              value: {{ include "appdynamics-network-monitoring-reducer.fullname" . }}
            - name: "EBPF_NET_INTAKE_PORT"
              value: "{{ default 7000 .Values.reducer.telemetryPort }}"
            - name: "EBPF_NET_HOST_DIR"
              value: "/hostfs"
          {{- if .Values.kernelCollector.env }}
          {{- toYaml .Values.kernelCollector.env | nindent 12 }}
          {{- end }}
          {{- if hasKey .Values.kernelCollector "resources" }}
          resources:
          {{- toYaml .Values.kernelCollector.resources | nindent 12 }}
          {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /hostfs/
            name: host-root
            readOnly: true
          - mountPath: /hostfs/var/cache
            name: host-var-cache
            readOnly: false
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      serviceAccountName: {{ include "appdynamics-network-monitoring-kernel-collector.serviceAccountName" . }}
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: host-var-cache
        hostPath:
          path: /var/cache
          type: DirectoryOrCreate
    {{- with .Values.kernelCollector.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.kernelCollector.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.kernelCollector.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
