{{- if .Values.testFramework.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "appdynamics-cloud-operator-health-test-connection"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  containers:
    - name: wget
      image: "{{ .Values.testFramework.image.repository }}:{{ .Values.testFramework.image.tag }}"
      env:
        - name: MANAGER_HEALTH_SERVICE_CLUSTERIP
          value: "appdynamics-cloud-operator-health-test-service"
        - name: MANAGER_HEALTH_SERVICE_PORT
          value: "8081"
      command:
        - sh
        - -c
        # The following shell script tests if the manager health is ok.
        - |
          options="--server-response --spider --timeout=10"

          liveness_url="$MANAGER_HEALTH_SERVICE_CLUSTERIP:$MANAGER_HEALTH_SERVICE_PORT/healthz"
          liveness_status=$(wget $options $liveness_url 2>&1 | grep "HTTP/" | awk '{print $2}')
          if [ "$liveness_status" != "200" ]
          then
            echo "Liveness check failed"
            exit 1
          fi

          readiness_url="$MANAGER_HEALTH_SERVICE_CLUSTERIP:$MANAGER_HEALTH_SERVICE_PORT/readyz"
          readiness_status=$(wget $options $readiness_url 2>&1 | grep "HTTP/" | awk '{print $2}')
          if [ "$readiness_status" != "200" ]
          then
            echo "Readiness check failed"
            exit 1
          fi

          exit 0
  restartPolicy: Never
{{- end }}
