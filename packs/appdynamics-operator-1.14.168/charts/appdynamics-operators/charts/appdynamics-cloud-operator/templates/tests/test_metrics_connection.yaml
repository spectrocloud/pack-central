{{- if .Values.testFramework.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "appdynamics-cloud-operator-metrics-test-connection"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": test
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  serviceAccountName: {{ .Values.operatorServiceAccount }}
  containers:
    - name: wget
      image: "{{ .Values.testFramework.image.repository }}:{{ .Values.testFramework.image.tag }}"
      env:
        - name: MANAGER_METRICS_SERVICE_CLUSTERIP
          value: "appdynamics-cloud-operator-metrics-service"
        - name: MANAGER_METRICS_SERVICE_PORT
          value: "8443"
      command:
        - sh
        - -c
        # The following shell script tests if the appdynamics-cloud-operator-metrics-service is up.
        - |
          options="--no-check-certificate --server-response --spider --timeout=10"
          auth_header="Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`"
          url="https://$MANAGER_METRICS_SERVICE_CLUSTERIP:$MANAGER_METRICS_SERVICE_PORT/metrics"

          metrics_status=$(wget $options --header="$auth_header" $url 2>&1 | grep "HTTP/" | awk '{print $2}')
          if [ "$metrics_status" != "200" ]
          then
            echo "Metrics check failed"
          exit 1
          fi
  restartPolicy: Never
{{- end }}
