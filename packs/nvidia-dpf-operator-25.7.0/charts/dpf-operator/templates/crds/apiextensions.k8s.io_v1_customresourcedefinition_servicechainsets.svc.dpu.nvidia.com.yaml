apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/part-of: dpf-operator-controller-manager
    dpu.nvidia.com/component: dpf-operator-controller-manager
  name: servicechainsets.svc.dpu.nvidia.com
spec:
  group: svc.dpu.nvidia.com
  names:
    kind: ServiceChainSet
    listKind: ServiceChainSetList
    plural: servicechainsets
    singular: servicechainset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceChainSet is the Schema for the servicechainsets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceChainSetSpec defines the desired state of ServiceChainSet
            properties:
              nodeSelector:
                description: |-
                  Select the Nodes with specific labels, ServiceChain CRs will be created
                  only for these Nodes
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: ServiceChainSpecTemplate holds the template for the ServiceChainSpec
                properties:
                  metadata:
                    description: ObjectMeta holds metadata like labels and annotations.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is a map of string keys and values.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels is a map of string keys and values.
                        type: object
                    type: object
                  spec:
                    description: ServiceChainSpec is the spec for the ServiceChainSpec
                    properties:
                      node:
                        description: Node where this ServiceChain applies to
                        type: string
                      switches:
                        description: The switches of the ServiceChain, order is significant
                        items:
                          description: Switch defines the switch configuration
                          properties:
                            ports:
                              description: Ports of the switch
                              items:
                                description: Port defines the port configuration
                                properties:
                                  serviceInterface:
                                    description: ServiceIfc defines the service interface
                                      configuration
                                    properties:
                                      ipam:
                                        description: IPAM defines the IPAM configuration
                                          when referencing a serviceInterface of type
                                          'service'
                                        properties:
                                          defaultGateway:
                                            description: DefaultGateway adds gateway
                                              as default gateway in the routes list
                                              if true.
                                            type: boolean
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: Labels matching service IPAM
                                            maxProperties: 50
                                            minProperties: 1
                                            type: object
                                          setDefaultRoute:
                                            description: SetDefaultRoute adds a default
                                              route to the routing table if true.
                                            type: boolean
                                        required:
                                        - matchLabels
                                        type: object
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: Labels matching service interface
                                        maxProperties: 50
                                        minProperties: 1
                                        type: object
                                    required:
                                    - matchLabels
                                    type: object
                                required:
                                - serviceInterface
                                type: object
                              maxItems: 50
                              minItems: 1
                              type: array
                            serviceMTU:
                              default: 1500
                              description: |-
                                ServiceMTU of the switch
                                The default is 1500.
                              maximum: 9216
                              minimum: 1000
                              type: integer
                          required:
                          - ports
                          type: object
                        maxItems: 50
                        minItems: 1
                        type: array
                    required:
                    - switches
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: ServiceChainSetStatus defines the observed state of ServiceChainSet
            properties:
              conditions:
                description: Conditions reflect the status of the object
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              numberApplied:
                description: The number of nodes where the service chain is applied
                  and is supposed to be applied.
                format: int32
                type: integer
              numberReady:
                description: The number of nodes where the service chain is applied
                  and ready.
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration records the Generation observed on
                  the object the last time it was patched.
                format: int64
                type: integer
            type: object
        type: object
        x-kubernetes-validations:
        - message: name length can't be bigger than 63 chars
          rule: self.metadata.name.size() <= 63
    served: true
    storage: true
    subresources:
      status: {}
