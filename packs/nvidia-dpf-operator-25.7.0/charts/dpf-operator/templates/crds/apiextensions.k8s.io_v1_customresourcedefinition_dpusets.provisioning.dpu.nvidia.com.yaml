apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/part-of: dpf-operator-controller-manager
    dpu.nvidia.com/component: dpf-operator-controller-manager
  name: dpusets.provisioning.dpu.nvidia.com
spec:
  group: provisioning.dpu.nvidia.com
  names:
    kind: DPUSet
    listKind: DPUSetList
    plural: dpusets
    singular: dpuset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DPUSet is the Schema for the dpusets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DPUSetSpec defines the desired state of DPUSet
            properties:
              dpuNodeSelector:
                description: Select the DPUNodes with specific labels
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              dpuSelector:
                additionalProperties:
                  type: string
                description: Select the DPU with specific labels
                type: object
              dpuTemplate:
                description: Object that describes the DPU that will be created if
                  insufficient replicas are detected
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations specifies annotations which are added
                      to the DPU.
                    type: object
                  spec:
                    description: Spec specifies the DPU specification.
                    properties:
                      bfb:
                        description: Specifies a BFB CR
                        properties:
                          name:
                            description: Specifies name of the bfb CR to use for this
                              DPU
                            type: string
                        type: object
                      cluster:
                        description: Specifies details on the K8S cluster to join
                        properties:
                          nodeLabels:
                            additionalProperties:
                              type: string
                            description: NodeLabels specifies the labels to be added
                              to the node.
                            type: object
                        type: object
                      dpuFlavor:
                        description: DPUFlavor is the name of the DPUFlavor that will
                          be used to deploy the DPU.
                        type: string
                      nodeEffect:
                        default:
                          drain: true
                        description: Specifies how changes to the DPU should affect
                          the Node
                        properties:
                          customAction:
                            description: |-
                              Name of a config map which contains a pod yaml definition to run which will apply the nodeEffect.
                              The pod is expected to exit when node effect is done, if pod terminates with error then DPU would move to an error phase.
                              The DPUNode's name will be exported as an environment variable, named as DPUNODE_NAME, to each container and init container in the pod.
                              The labels and annotations of DPUNode will be exported in `/etc/dpu/dpf-pod-info/labels` and `/etc/dpu/dpf-pod-info/annotations` accordingly; the volume name `dpf-pod-info` is used to mount the labels and annotations.
                              If any name confliction for env or volume, the controller will not export the name or labels/annotations of DPUNode accordingly.
                            type: string
                          customLabel:
                            additionalProperties:
                              type: string
                            description: Add specify labels on the DPU node
                            type: object
                          drain:
                            description: Drain the K8s host node by NodeMaintenance
                              operator
                            type: boolean
                          hold:
                            description: |-
                              Places annotation `wait-for-external-nodeeffect` and waits for it to be removed
                              this is the default behavior in a non K8S environment
                            type: boolean
                          noEffect:
                            description: Do not do any action on the DPU node
                            type: boolean
                          taint:
                            description: Add specify taint on the DPU node
                            properties:
                              effect:
                                description: |-
                                  Required. The effect of the taint on pods
                                  that do not tolerate the taint.
                                  Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: |-
                                  TimeAdded represents the time at which the taint was added.
                                  It is only written for NoExecute taints.
                                format: date-time
                                type: string
                              value:
                                description: The taint value corresponding to the
                                  taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                        type: object
                        x-kubernetes-validations:
                        - message: only one of taint, noEffect, drain, customLabel,
                            customAction, hold can be set
                          rule: '(has(self.taint) ? 1 : 0) + (has(self.noEffect) ?
                            1 : 0) + (has(self.customLabel) ? 1 : 0) + (has(self.drain)
                            ? 1 : 0) + (has(self.customAction) ? 1 : 0) + (has(self.hold)
                            ? 1 : 0) == 1'
                    type: object
                type: object
              strategy:
                description: The rolling update strategy to use to updating existing
                  DPUs with new ones.
                properties:
                  rollingUpdate:
                    description: Rolling update config params. Present only if StrategyType
                      = RollingUpdate.
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: MaxUnavailable is the maximum number of DPUs
                          that can be unavailable during the update.
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    default: OnDelete
                    description: Can be "OnDelete" or "RollingUpdate".
                    enum:
                    - OnDelete
                    - RollingUpdate
                    type: string
                type: object
            type: object
          status:
            description: DPUSetStatus defines the observed state of DPUSet
            properties:
              dpuStatistics:
                additionalProperties:
                  type: integer
                description: DPUStatistics is a map of DPUPhase to the number of DPUs
                  in that phase.
                type: object
            type: object
        type: object
        x-kubernetes-validations:
        - message: name length can't be bigger than 63 chars
          rule: self.metadata.name.size() <= 63
    served: true
    storage: true
    subresources:
      status: {}
