{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "title": "Values",
  "additionalProperties": false,
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "The name for cluster where the collectors and target allocator are deployed, required when enablePrometheus set to true",
          "type": "string"
        },
        "clusterId": {
          "description": "The uid of kube-system namespace, required when helm lookup is not supported and enablePrometheus/selfTelemetry is set to true",
          "type": "string"
        }
      }
    },
    "install": {
      "description": "Install flag for Otel, 'true' will install/upgrade it, 'false' will not install/uninstall it",
      "type": "boolean"
    },
    "nameOverride": {
      "description": "Override name of the chart used in Kubernetes object names.",
      "type": "string"
    },
    "fullnameOverride": {
      "description": "Override fully qualified app name.",
      "type": "string"
    },
    "clientId": {
      "description": "AppDynamics oauth2 client id",
      "type": "string"
    },
    "clientSecret": {
      "description": "AppDynamics oauth2 client secret plain text.",
      "type": ["string"]
    },
    "clientSecretEnvVar": {
      "description": "AppDynamics oauth2 client secret environment variable.",
      "type": ["object"]
    },
    "tokenUrl": {
      "description": "AppDynamics oauth2 token refreshurl",
      "type": "string"
    },
    "endpoint": {
      "description": "AppDynamics otlp endpoint url",
      "type": "string"
    },
    "spec": {
      "type": "object",
      "description": "The spec section of OpenTelemetry Operator. Refer to https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#opentelemetrycollectorspec for possible properties"
    },
    "traceContextPropagation": {
      "type": "boolean",
      "description": "to enable/disbale traceparent header propagation for export requests made by collector."
    },
    "status": {
      "type": "object",
      "description": "The status section of OpenTelemetry Operator. Refer to https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#opentelemetrycollectorstatus for possible properties"
    },
    "config": {
      "description": "OpenTelemetry Collector Configuration. It is the recommended way to set the collector config. If spec.config is set, this property won't take effect. Refer to the OpenTelemetry Collector documentation for details..",
      "type": "object"
    },
    "configOverride": {
      "description": "Any additional OpenTelemetry Collector Configuration for the enabled configuration. We can also use this field to remove/add new components to the pipelines",
      "type": "object"
    },
    "sendChartInfo": {
      "description": "sendChartInfo when set to true, will add the chart name and version to the http headers for sending to AppDynamics Cloud for debugging purpose. It is false by default",
      "type": "boolean"
    },
    "serviceAccount": {
      "description": "ServiceAccount applied by this chart, disable it by setting create to false.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array"
        }
      },
      "required": [
        "create"
      ]
    },
    "service": {
      "description": "service expose collector for external traffics.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer",
            "ExternalName"
          ]
        },
        "ports": {
          "type": "array"
        },
        "clusterIP": {
          "type": "string"
        }
      }
    },
    "rbac": {
      "description": "RBAC rules associated with the service account. If created, a Role will be created and bind with the collector service account",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rules": {
          "type": "array"
        },
        "create": {
          "type": "boolean"
        }
      },
      "required": [
        "create"
      ]
    },
    "selfTelemetry": {
      "description": "Open telemetry collector metrics",
      "type": "boolean"
    },
    "selfTelemetryServiceName": {
      "description": "Open telemetry collector service name",
      "type": "string"
    },
    "selfTelemetryServiceNamespace": {
      "description": "Open telemetry collector service namespace",
      "type": "string"
    },
    "enablePrometheus": {
      "description": "Enable the prometheus related deployment, it will deploy a target allocator and change collector replica mode to be statfulset.",
      "type": "boolean"
    },
    "setPodUID":{
      "description": "setPodUID when set to true will set pod uid to the collector self-telemetry resrouce.",
      "type": "boolean"
    },    
    "targetAllocatorServiceAccount": {
      "description": "ServiceAccount for target allocator, only enable when enablePrometheus equals true, disable it by setting create to false.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array"
        }
      },
      "required": [
        "create"
      ]      
    },
    "os": {
      "description": "Choose the os type for otel collector to run, useful when the cluster has mixed os types.",
      "type": "array"
    },     
    "env":{
      "description": "os specific otel collector spec.",
      "type": "object"
    },
    "annotations":{
      "description": "user provided annotations.",
      "type": "object"
    },
    "labels":{
      "description": "user provided labels.",
      "type": "object"
    },
    "mode":{
      "description": "spec and config override for different deployment modes",
      "type": "object"
    },
    "enableFileLog":{
      "description": "enable filelog receiver deployment.",
      "type": "boolean"
    },
    "filelogReceiverConfig":{
      "description": "filelogReceiverConfig specify configs for filelog receiver.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "includeLogsPath": {
          "type": "array"
        },
        "excludeLogsPath": {
          "type": "array"
        },
        "messageParserPattern": {
          "type": "string"
        },
        "messageParserType": {
          "type": "string"
        }
      }
    },
    "instrumentation":{
      "description": "instrumentation specify configs for auto-instrumentation.",
      "type": "object"
    }
  },  
  "required": [
    "clientId",
    "tokenUrl",
    "endpoint",
    "install"
  ],
  "anyOf": [
    {"required" : ["clientSecret"]},
    {"required" : ["clientSecretEnvVar"]}
  ]
}