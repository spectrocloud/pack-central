presets:
  - name: "Fleet agents"
    displayName: "Fleet agents with Elasticsearch and Kibana"
    group: "OOB Examples"
    remove:
    - "charts.elasticsearch"
    - "charts.eck-kibana"
    - "charts.eck-agent"
    - "charts.eck-fleet-server"
    add: |
      charts:
        eck-stack:
          eck-elasticsearch:
            enabled: true

            # Name of the Elasticsearch instance.
            #
            fullnameOverride: elasticsearch

            nodeSets:
            - name: default
              count: 3
              # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
              # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
              # and leave node.store.allow_mmap unset.
              # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
              #
              config:
                node.store.allow_mmap: false

          eck-kibana:
            enabled: true

            # Name of the Kibana instance.
            #
            fullnameOverride: kibana
            
            spec:
              # Reference to ECK-managed Elasticsearch instance, ideally from {{ "elasticsearch.fullname" }}
              #
              elasticsearchRef:
                name: elasticsearch

              config:
                # Note that these are specific to the namespace into which this example is installed, and are
                # using `elastic-stack` as configured here and detailed in the README when installing:
                #
                # `helm install es-kb-quickstart elastic/eck-stack -n elastic-stack`
                #
                # If installed outside of the `elastic-stack` namespace, the following 2 lines need modification.
                xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.elastic-stack.svc:9200"]
                xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-agent-http.elastic-stack.svc:8220"]
                xpack.fleet.packages:
                - name: system
                  version: latest
                - name: elastic_agent
                  version: latest
                - name: fleet_server
                  version: latest
                - name: kubernetes
                  version: latest
                xpack.fleet.agentPolicies:
                - name: Fleet Server on ECK policy
                  id: eck-fleet-server
                  namespace: default
                  monitoring_enabled:
                  - logs
                  - metrics
                  package_policies:
                  - name: fleet_server-1
                    id: fleet_server-1
                    package:
                      name: fleet_server
                - name: Elastic Agent on ECK policy
                  id: eck-agent
                  namespace: default
                  monitoring_enabled:
                  - logs
                  - metrics
                  unenroll_timeout: 900
                  package_policies:
                  - package:
                      name: system
                    name: system-1
                  - package:
                      name: kubernetes
                    name: kubernetes-1

          eck-agent:
            enabled: true
            
            spec:
              # Agent policy to be used.
              policyID: eck-agent
              # Reference to ECK-managed Kibana instance.
              #
              kibanaRef:
                name: kibana

              elasticsearchRefs: []

              # Reference to ECK-managed Fleet instance.
              #
              fleetServerRef:
                name: fleet-server
              
              mode: fleet

              daemonSet:
                podTemplate:
                  spec:
                    serviceAccountName: elastic-agent
                    hostNetwork: true
                    dnsPolicy: ClusterFirstWithHostNet
                    automountServiceAccountToken: true
                    securityContext:
                      runAsUser: 0
            
          eck-fleet-server:
            enabled: true

            fullnameOverride: "fleet-server"

            spec:
              # Agent policy to be used.
              policyID: eck-fleet-server
              kibanaRef:
                name: kibana
              elasticsearchRefs:
              - name: elasticsearch

  - name: "Logstash"
    displayName: "Logstash with Elasticsearch, Kibana and Beats"
    group: "OOB Examples"
    remove:
    - "charts.elasticsearch"
    - "charts.eck-kibana"
    - "charts.eck-beats"
    - "charts.eck-logstash"
    add: |
      charts:
        eck-stack:
          eck-elasticsearch:
            nodeSets:
            - name: default
              count: 3
              config:
                # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
                # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
                # and leave node.store.allow_mmap unset.
                # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html
                #
                node.store.allow_mmap: false
              podTemplate:
                spec:
                  containers:
                  - name: elasticsearch
                    resources:
                      limits:
                        memory: 2Gi
                      requests:
                        memory: 2Gi
          eck-kibana:
            enabled: true
            spec:
              count: 1
              elasticsearchRef:
                name: elasticsearch
          
          # AIRGAP DEPLOYMENTS PLEASE NOTE:
          # This preset curls logstash data from an external location. 
          # If you want to use this in airgap you will have to move it to a local file server and replace the curl endpoint below
          eck-beats:
            enabled: true
            spec:
              type: filebeat
              daemonSet: null
              config:
                filebeat.inputs:
                - type: log
                  paths:
                    - /data/logstash-tutorial.log
                processors:
                - add_host_metadata: {}
                - add_cloud_metadata: {}
                output.logstash:
                  # This needs to be {{logstash-name}}-ls-beats:5044
                  hosts: ["logstash-ls-beats-ls-beats:5044"]
              deployment:
                podTemplate:
                  spec:
                    automountServiceAccountToken: true
                    initContainers:
                      - name: download-tutorial
                        image: curlimages/curl
                        command: ["/bin/sh"]
                        args: ["-c", "curl -L https://download.elastic.co/demos/logstash/gettingstarted/logstash-tutorial.log.gz | gunzip -c > /data/logstash-tutorial.log"]
                        volumeMounts:
                          - name: data
                            mountPath: /data
                    containers:
                      - name: filebeat
                        securityContext:
                          runAsUser: 1000
                        volumeMounts:
                          - name: data
                            mountPath: /data
                          - name: beat-data
                            mountPath: /usr/share/filebeat/data
                    volumes:
                      - name: data
                        emptydir: {}
                      - name: beat-data
                        emptydir: {}
          eck-logstash:
            enabled: true
            # This is required to be able to set the logstash
            # output of beats in a consistent manner.
            fullnameOverride: "logstash-ls-beats"
            elasticsearchRefs:
              # This clusterName is required to match the environment variables
              # used in the below config.string output section.
              - clusterName: eck
                name: elasticsearch
            pipelines:
              - pipeline.id: main
                config.string: |
                  input {
                    beats {
                      port => 5044
                    }
                  }
                  filter {
                    grok {
                      match => { "message" => "%{HTTPD_COMMONLOG}"}
                    }
                    geoip {
                      source => "[source][address]"
                      target => "[source]"
                    }
                  }
                  output {
                    elasticsearch {
                      hosts => [ "${ECK_ES_HOSTS}" ]
                      user => "${ECK_ES_USER}"
                      password => "${ECK_ES_PASSWORD}"
                      ssl_certificate_authorities => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
                    }
                  }
            services:
              - name: beats
                service:
                  spec:
                    type: ClusterIP
                    ports:
                      - port: 5044
                        name: "filebeat"
                        protocol: TCP
                        targetPort: 5044