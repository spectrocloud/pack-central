# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: hipster
    istio-injection: enabled
  name: {{ .Values.namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: spectro-image-pull-secret
  namespace: {{ .Values.namespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2djci5pbyI6eyJ1c2VybmFtZSI6Il9qc29uX2tleSIsInBhc3N3b3JkIjoie1xuICBcInR5cGVcIjogXCJzZXJ2aWNlX2FjY291bnRcIixcbiAgXCJwcm9qZWN0X2lkXCI6IFwic3BlY3Ryby1jb21tb24tZGV2XCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCJiZmZhMThkNzEwODk2M2JiZGFjODU2ZWZmYzFkMDZlNTZjZDQ2MTg2XCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdkFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLWXdnZ1NpQWdFQUFvSUJBUUNWMW5sTlVGWStQS0tmXFxuUjZqWXQveEI3a1ZUb1Z4T09jQ09xeWNQdjVIOG5FejZTclNubTlVNDN1YnNoem9EYU85Z0dFWVR3c25aSlJTNlxcblptUkJFa3hPSnI5OEJhbCtJUlZGYStyTjdkS1VCMHd2emNibmRVRVNSMkpNRWcwZlArNG5KQTR6NklIZmR4c1FcXG4yUE1rUHhnb1ZFNDFJQUxsUmZ6MzlFODUzL3BIaVArcHBSQ3NsVEJuNWUrRkJ3L1BzZEwwWTdOUklQbjVPMmZaXFxuVmoxREdrL1lTV2JicnQvRVZYVWN0STIza2tEeThzZ2ZHUGViQUVSVkhkMFFlTXMvRS9LSnhiTnZDV1BIczJVa1xcbktCS1hFS2FtK1MvNTVTeUpBdzdqSmZITHUvaGRJcUFMd0tlTzBaTXRFTjFocjlhckhyN0VHOU96a0hTeHZKQTdcXG5uV0p2RWpRdkFnTUJBQUVDZ2dFQUE5ZnJkOVIrSFpJS00zSWpIbHJ2SmhjaE9LWVZublNZaEdXc1RnZm92MFZEXFxuR3AveUUydWZGUklhSHBDdXdaclYzbVZycXdVSFNwTW83R3ZuSm03UnVYTzhkYTJ2Z0taWW1JamZVbGZnOVZGK1xcbjNvZlhxK1VKUmtRWEJhbE92ZTFsNGF3MXdoOGJFNWZQM2kvVWxWVXJIc3lrYUI3WkJUdTkwbnhISlpMRDRVVUhcXG5PcDRUOGJMeXZMaEdsdTBjeWZpcVNsbzVuYXVkRll2ZVFveGNsMldPMXpVaSs3MWNDVVA2bWNZdFc1Q0VZemhCXFxuSDRQSjUydS9hcUJHdk5vaWhXNWN5RGZtK2ljY1pQbkhjeEdSV20xYmZKQzl2VkNIVEZuOVFQdGJSNUJGQmozM1xcbk43YlBHeHZpNlJHYlEwVDNnKzdaWkpZZlM3VG10bjVMVk1iMUswR0VBUUtCZ1FETmkySGJuN00ycFlaZGdvbitcXG5oM1duN1plM3AwY1c1RjhkbVRIM0J0TXVHbDJWSlBsKzBMQnFGYmpPdVE1bUJ2VldoT1AzNDZKeTlYV1J5RHErXFxuQ1pzM2d6T2hTOWxIcUVSNXd3VDA5bDdRWW94SURkSjVGYXl4dXpKNDkvNy9MZHdGRUVPRUcydUh1dVBYSDFSVFxcbmxoVGhDUTkzcU5pMXA2WGJ0cXRSb3NiN1BRS0JnUUM2bm0zU2ZEMDlPSk1MeTlWYXd3VEhKK1ZlWEE5UXRrSTFcXG5ObWNCSFdtWDFxZlVxcUxRV1ZQaXdxUStaM0trNlVDdVRyejhZb2F2YmF4NDRIbVpTNWRCcUhUSzF2aXlVcUtoXFxub0VCVXAyTjBSTlpoNGhweCtmYXdIV0dHQnU4SlA3YS9vK2xCMi9WS1hkVk1nRitPRW5Ib2FtUWlRc1RjS3NuQlxcbjI5TlArVDdUMndLQmdEZ2NtOXRiN28yMWhFZlUwaDBsRjY1L1F4TEUzTGhZSWNzdnZoOGt3dFBzS0s0RmlRTGdcXG5yN2hXTTd4amNwWFJ3bm9iRHl6bC9Md0xYRXd1OERKZTV2dXhtbyttNkNzU3VaYlA4WE42S29vU3pSOENmdm5GXFxuTy83TkRzdE5VRlNUVFdRb2UzWCtFazNjYkVTVzdldGZwbFdFcHE5UTdkQXhjeXJXNUZBRjh2STFBb0dBQ1duNFxcbmpFZXNKeXgxYm9EbjBGNUtIV25MemtqQ2xRVzhyVWFEUjdFZUpJUzFqcXJVNzhHeDA1eVNBSHZqY3FJNW14RnBcXG53eW1OTmNoSWpRaDEyZC9RVDRXWjdxbU5maUZoQnRvNHBJeVZIY1pqTWlqZndLUWxaNWp6MUhrQkVleGU0YWY1XFxuR2xOb09rb2xlbWgzYVlsUXFiTEVQbDR6NUE5Y2dpVCtzZWdXM1VVQ2dZQmUwTmhqUHB5V1JYSVlMNjZCVnl3SlxcbkhEYzFSeml2WkxkUnBCVkxIeXhjVWViZmFjaCtWZFk0QjcxZlBZNzJuR1FOSHJUUkhlNS9ZTFZLZktQMmdRQ2tcXG5yMEpNYzZtVXNJTGJ2R2hNNWYrSEE2dFp3S014VDJyNmtsUC9XSzZHV2VuWEhMKzFacXFvTkRoZ3o4N2lhRzVmXFxueUM1UTUxQnJFTkdZbjR0THc1NmxCQT09XFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcInNwZWN0cm8tY29tbW9uLWRldkBzcGVjdHJvLWNvbW1vbi1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMTAwMTU3NjMxODc3MjgxNDc2NzlcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW5cIixcbiAgXCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHNcIixcbiAgXCJjbGllbnRfeDUwOV9jZXJ0X3VybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvc3BlY3Ryby1jb21tb24tZGV2JTQwc3BlY3Ryby1jb21tb24tZGV2LmlhbS5nc2VydmljZWFjY291bnQuY29tXCJcbn0iLCJlbWFpbCI6ImFueUB2YWxpZC5lbWFpbCIsImF1dGgiOiJYMnB6YjI1ZmEyVjVPbnNLSUNBaWRIbHdaU0k2SUNKelpYSjJhV05sWDJGalkyOTFiblFpTEFvZ0lDSndjbTlxWldOMFgybGtJam9nSW5Od1pXTjBjbTh0WTI5dGJXOXVMV1JsZGlJc0NpQWdJbkJ5YVhaaGRHVmZhMlY1WDJsa0lqb2dJbUptWm1FeE9HUTNNVEE0T1RZelltSmtZV000TlRabFptWmpNV1F3Tm1VMU5tTmtORFl4T0RZaUxBb2dJQ0p3Y21sMllYUmxYMnRsZVNJNklDSXRMUzB0TFVKRlIwbE9JRkJTU1ZaQlZFVWdTMFZaTFMwdExTMWNiazFKU1VWMlFVbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVZORFFrdFpkMmRuVTJsQlowVkJRVzlKUWtGUlExWXhibXhPVlVaWksxQkxTMlpjYmxJMmFsbDBMM2hDTjJ0V1ZHOVdlRTlQWTBOUGNYbGpVSFkxU0RodVJYbzJVM0pUYm0wNVZUUXpkV0p6YUhwdlJHRlBPV2RIUlZsVWQzTnVXa3BTVXpaY2JscHRVa0pGYTNoUFNuSTVPRUpoYkN0SlVsWkdZU3R5VGpka1MxVkNNSGQyZW1OaWJtUlZSVk5TTWtwTlJXY3dabEFyTkc1S1FUUjZOa2xJWm1SNGMxRmNiakpRVFd0UWVHZHZWa1UwTVVsQlRHeFNabm96T1VVNE5UTXZjRWhwVUN0d2NGSkRjMnhVUW00MVpTdEdRbmN2VUhOa1REQlpOMDVTU1ZCdU5VOHlabHBjYmxacU1VUkhheTlaVTFkaVluSjBMMFZXV0ZWamRFa3lNMnRyUkhrNGMyZG1SMUJsWWtGRlVsWklaREJSWlUxekwwVXZTMHA0WWs1MlExZFFTSE15Vld0Y2JrdENTMWhGUzJGdEsxTXZOVFZUZVVwQmR6ZHFTbVpJVEhVdmFHUkpjVUZNZDB0bFR6QmFUWFJGVGpGb2NqbGhja2h5TjBWSE9VOTZhMGhUZUhaS1FUZGNibTVYU25aRmFsRjJRV2ROUWtGQlJVTm5aMFZCUVRsbWNtUTVVaXRJV2tsTFRUTkpha2hzY25aS2FHTm9UMHRaVm01dVUxbG9SMWR6VkdkbWIzWXdWa1JjYmtkd0wzbEZNblZtUmxKSllVaHdRM1YzV25KV00yMVdjbkYzVlVoVGNFMXZOMGQyYmtwdE4xSjFXRTg0WkdFeWRtZExXbGx0U1dwbVZXeG1aemxXUml0Y2JqTnZabGh4SzFWS1VtdFJXRUpoYkU5MlpURnNOR0YzTVhkb09HSkZOV1pRTTJrdlZXeFdWWEpJYzNscllVSTNXa0pVZFRrd2JuaElTbHBNUkRSVlZVaGNiazl3TkZRNFlreDVka3hvUjJ4MU1HTjVabWx4VTJ4dk5XNWhkV1JHV1habFVXOTRZMnd5VjA4eGVsVnBLemN4WTBOVlVEWnRZMWwwVnpWRFJWbDZhRUpjYmtnMFVFbzFNblV2WVhGQ1IzWk9iMmxvVnpWamVVUm1iU3RwWTJOYVVHNUlZM2hIVWxkdE1XSm1Ta001ZGxaRFNGUkdiamxSVUhSaVVqVkNSa0pxTXpOY2JrNDNZbEJIZUhacE5sSkhZbEV3VkRObkt6ZGFXa3BaWmxNM1ZHMTBialZNVmsxaU1Vc3dSMFZCVVV0Q1oxRkVUbWt5U0dKdU4wMHljRmxhWkdkdmJpdGNibWd6VjI0M1dtVXpjREJqVnpWR09HUnRWRWd6UW5STmRVZHNNbFpLVUd3ck1FeENjVVppYWs5MVVUVnRRblpXVjJoUFVETTBOa3A1T1ZoWFVubEVjU3RjYmtOYWN6Tm5lazlvVXpsc1NIRkZValYzZDFRd09XdzNVVmx2ZUVsRVpFbzFSbUY1ZUhWNlNqUTVMemN2VEdSM1JrVkZUMFZITW5WSWRYVlFXRWd4VWxSY2JteG9WR2hEVVRremNVNXBNWEEyV0dKMGNYUlNiM05pTjFCUlMwSm5VVU0yYm0welUyWkVNRGxQU2sxTWVUbFdZWGQzVkVoS0sxWmxXRUU1VVhSclNURmNiazV0WTBKSVYyMVlNWEZtVlhGeFRGRlhWbEJwZDNGUksxb3pTMnMyVlVOMVZISjZPRmx2WVhaaVlYZzBORWh0V2xNMVpFSnhTRlJMTVhacGVWVnhTMmhjYm05RlFsVndNazR3VWs1YWFEUm9jSGdyWm1GM1NGZEhSMEoxT0VwUU4yRXZieXRzUWpJdlZrdFlaRlpOWjBZclQwVnVTRzloYlZGcFVYTlVZMHR6YmtKY2JqSTVUbEFyVkRkVU1uZExRbWRFWjJOdE9YUmlOMjh5TVdoRlpsVXdhREJzUmpZMUwxRjRURVV6VEdoWlNXTnpkblpvT0d0M2RGQnpTMHMwUm1sUlRHZGNibkkzYUZkTk4zaHFZM0JZVW5kdWIySkVlWHBzTDB4M1RGaEZkM1U0UkVwbE5YWjFlRzF2SzIwMlEzTlRkVnBpVURoWVRqWkxiMjlUZWxJNFEyWjJia1pjYms4dk4wNUVjM1JPVlVaVFZGUlhVVzlsTTFnclJXc3pZMkpGVTFjM1pYUm1jR3hYUlhCeE9WRTNaRUY0WTNseVZ6VkdRVVk0ZGtreFFXOUhRVU5YYmpSY2JtcEZaWE5LZVhneFltOUViakJHTlV0SVYyNU1lbXRxUTJ4UlZ6aHlWV0ZFVWpkRlpVcEpVekZxY1hKVk56aEhlREExZVZOQlNIWnFZM0ZKTlcxNFJuQmNibmQ1YlU1T1kyaEphbEZvTVRKa0wxRlVORmRhTjNGdFRtWnBSbWhDZEc4MGNFbDVWa2hqV21wTmFXcG1kMHRSYkZvMWFub3hTR3RDUldWNFpUUmhaalZjYmtkc1RtOVBhMjlzWlcxb00yRlpiRkZ4WWt4RlVHdzBlalZCT1dObmFWUXJjMlZuVnpOVlZVTm5XVUpsTUU1b2FsQndlVmRTV0VsWlREWTJRbFo1ZDBwY2JraEVZekZTZW1sMldreGtVbkJDVmt4SWVYaGpWV1ZpWm1GamFDdFdaRmswUWpjeFpsQlpOekp1UjFGT1NISlVVa2hsTlM5WlRGWkxaa3RRTW1kUlEydGNibkl3U2sxak5tMVZjMGxNWW5aSGFFMDFaaXRJUVRaMFduZExUWGhVTW5JMmEyeFFMMWRMTmtkWFpXNVlTRXdyTVZweGNXOU9SR2huZWpnM2FXRkhOV1pjYm5sRE5WRTFNVUp5UlU1SFdXNDBkRXgzTlRac1FrRTlQVnh1TFMwdExTMUZUa1FnVUZKSlZrRlVSU0JMUlZrdExTMHRMVnh1SWl3S0lDQWlZMnhwWlc1MFgyVnRZV2xzSWpvZ0luTndaV04wY204dFkyOXRiVzl1TFdSbGRrQnpjR1ZqZEhKdkxXTnZiVzF2Ymkxa1pYWXVhV0Z0TG1kelpYSjJhV05sWVdOamIzVnVkQzVqYjIwaUxBb2dJQ0pqYkdsbGJuUmZhV1FpT2lBaU1URXdNREUxTnpZek1UZzNOekk0TVRRM05qYzVJaXdLSUNBaVlYVjBhRjkxY21raU9pQWlhSFIwY0hNNkx5OWhZMk52ZFc1MGN5NW5iMjluYkdVdVkyOXRMMjh2YjJGMWRHZ3lMMkYxZEdnaUxBb2dJQ0owYjJ0bGJsOTFjbWtpT2lBaWFIUjBjSE02THk5dllYVjBhREl1WjI5dloyeGxZWEJwY3k1amIyMHZkRzlyWlc0aUxBb2dJQ0poZFhSb1gzQnliM1pwWkdWeVgzZzFNRGxmWTJWeWRGOTFjbXdpT2lBaWFIUjBjSE02THk5M2QzY3VaMjl2WjJ4bFlYQnBjeTVqYjIwdmIyRjFkR2d5TDNZeEwyTmxjblJ6SWl3S0lDQWlZMnhwWlc1MFgzZzFNRGxmWTJWeWRGOTFjbXdpT2lBaWFIUjBjSE02THk5M2QzY3VaMjl2WjJ4bFlYQnBjeTVqYjIwdmNtOWliM1F2ZGpFdmJXVjBZV1JoZEdFdmVEVXdPUzl6Y0dWamRISnZMV052YlcxdmJpMWtaWFlsTkRCemNHVmpkSEp2TFdOdmJXMXZiaTFrWlhZdWFXRnRMbWR6WlhKMmFXTmxZV05qYjNWdWRDNWpiMjBpQ24wPSJ9fX0=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: frontend
      version: v1
  template:
    metadata:
      labels:
        app: frontend
        version: v1
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/frontend:v0.1.5
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v2
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: frontend
      version: v2
  template:
    metadata:
      labels:
        app: frontend
        version: v2
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      imagePullSecrets:
      - name: spectro-image-pull-secret
      containers:
        - name: server
          image: gcr.io/spectro-common-dev/saamalik/hipster/frontend:latest
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  namespace: {{ .Values.namespace }}
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.1.5
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
        version: v1
    spec:
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.1.5
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
        version: v1
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
      - name: main
        image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.1.5
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
        version: v1
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.1.5
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
        version: v1
    spec:
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/shippingservice:v0.1.5
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/adservice:v0.3.5
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        #- name: JAEGER_SERVICE_ADDR
        #  value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/currencyservice:v0.1.5
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: DISABLE_DEBUGGER
        #   value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.1.5
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          failureThreshold: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: DISABLE_DEBUGGER
        #   value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.1.5
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        - name: PORT
          value: "7070"
        - name: LISTEN_ADDR
          value: "0.0.0.0"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
        version: v1
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.1.5
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        # - name: DISABLE_TRACING
        #   value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
