pack:
  namespace: dpf-operator-system
  namespaceLabels:
    "dpf-operator-system": "pod-security.kubernetes.io/enforce=privileged,pod-security.kubernetes.io/enforce-version=latest"
  releaseNameOverride:
    argo-cd: argo-cd
    grafana: grafana
    kamaji: kamaji
    kube-state-metrics: kube-state-metrics
    maintenance-operator-chart: maintenance-operator
    node-feature-discovery: node-feature-discovery
    prometheus: prometheus
charts:
  ## installed dependencies except for kamaji.
  argo-cd:
    applicationSet:
      replicas: 0
    dex:
      enabled: false
    notifications:
      enabled: false
    global:
      podLabels:
        ovn.dpu.nvidia.com/skip-injection: ""
      affinity:
        nodeAffinity:
          # -- Default node affinity rules. Either: `none`, `soft` or `hard`
          type: hard
          # -- Default match expressions for node affinity
          matchExpressions:
            - key: "node-role.kubernetes.io/control-plane"
              operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule

  ## NFD configuration
  node-feature-discovery:
    master:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: Exists
    worker:
      enable: true
      hostNetwork: true
      # Change dnsPolicy to "Default" when deploying on MAAS
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - key: node.kubernetes.io/not-ready
          operator: Exists
      extraEnvs:
        - name: "KUBERNETES_SERVICE_HOST"
          # Use "auto" for CAPI and "{{ .spectro.system.cluster.kubevip }}" for agent/appliance mode.
          value: "auto"
        - name: "KUBERNETES_SERVICE_PORT"
          value: "6443"
      config:
        sources:
          pci:
            deviceClassWhitelist:
              - "0200"
            deviceLabelFields:
              - "class"
              - "vendor"
              - "device"
    gc:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule

  kamaji:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: Exists
    tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
    kamaji-etcd:
      persistentVolumeClaim:
        storageClassName: local-path-provisioner
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      jobs:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "node-role.kubernetes.io/control-plane"
                      operator: Exists
        tolerations:
          - key: node-role.kubernetes.io/master
            operator: Exists
            effect: NoSchedule
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: NoSchedule
      datastore:
        enabled: true
        annotations:
          helm.sh/resource-policy: keep
        name: default
    image:
      repository: ghcr.io/nvidia/kamaji
      tag: v1.33.0-25.4.1
      pullPolicy: Always
    cfssl:
      image:
        tag: v1.6.5

  ## prometheus configuration.
  prometheus:
    server:
      persistentVolume:
        storageClass: local-path-provisioner
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
    alertmanager:
      enabled: false
    prometheus-node-exporter:
      enabled: false
    prometheus-pushgateway:
      enabled: false
    kube-state-metrics:
      enabled: false
    extraScrapeConfigs: |
      - job_name: 'doca-platform-framework'
        scrape_interval: 15s
        metrics_path: /metrics
        scheme: https
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_dpu_nvidia_com_component]
            action: keep
            regex: ".*-controller-manager"
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: metrics

  ## grafana configuration
  grafana:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: Exists
    tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
    persistence:
      enabled: true
      storageClassName: local-path-provisioner
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: prometheus
            type: prometheus
            url: http://dpf-operator-prometheus-server
            access: proxy
            isDefault: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'debug'
            orgId: 1
            folder: 'debug'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/debug
    dashboardsConfigMaps:
      default: dpf-operator-grafana-dashboards
      debug: dpf-operator-grafana-debug-dashboards

  ## kube-state-metrics configuration
  kube-state-metrics:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: Exists
    tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
    extraArgs:
      - --custom-resource-state-config-file=/etc/customresourcestate/config.yaml
    volumes:
      - configMap:
          defaultMode: 420
          name: dpf-operator-customresourcestate-config
        name: customresourcestate-config
    volumeMounts:
      - mountPath: /etc/customresourcestate
        name: customresourcestate-config
        readOnly: true
    rbac:
      extraRules:
        - apiGroups:
            - svc.dpu.nvidia.com
            - operator.dpu.nvidia.com
            - svc.dpu.nvidia.com
            - provisioning.dpu.nvidia.com
          resources:
            - dpuclusters
            - dpuclusters/status
            - dpudeployments
            - dpudeployments/status
            - dpuservicecredentialrequests
            - dpuservicecredentialrequests/status
            - dpuservices
            - dpuservices/status
            - dpuservicetemplates
            - dpuservicetemplates/status
            - dpfoperatorconfigs
            - dpfoperatorconfigs/status
            - dpuservicechains
            - dpuservicechains/status
            - dpuserviceinterfaces
            - dpuserviceinterfaces/status
            - dpuserviceipams
            - dpuserviceipams/status
            - dpus
            - dpus/status
            - bfbs
            - bfbs/status
          verbs: ["list", "watch"]
        - apiGroups: ["apiextensions.k8s.io"]
          resources: ["customresourcedefinitions"]
          verbs: ["list", "watch"]

  ## maintenance-operator chart configuration
  maintenance-operator-chart:
    operatorConfig:
      maxParallelOperations: 60%
    operator:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule

  ## IsOpenShift templates resources - for example ClusterRoleBindings to SecurityContextConstraints - which are relevant
  ## when installing DPF using helm on OpenShift.
  isOpenshift: false