namespace: dell-csm-operator

image:
  repository: quay.io/dell/container-storage-modules/dell-csm-operator
  pullPolicy: IfNotPresent
  tag: "v1.9.0"

csm:
  # Select a preset to populate the default configuration for your platform
  namespace: powerstore

  type: powerstore
  version: v2.14.0

  config:
    secret:
      encoded: false # if set to true, provide a base64 encoded value instead
      # Default secret names:
      # PowerFlex:  vxflexos-config
      # PowerMax:   powermax-creds
      # PowerStore: powerstore-config
      name: powerstore-config
      value: |
        arrays:
          - endpoint: "https://10.0.0.1/api/rest"     # full URL path to the PowerStore API
            globalID: "unique"                        # unique id of the PowerStore array
            username: "user"                          # username for connecting to API
            password: "password"                      # password for connecting to API
            skipCertificateValidation: true           # indicates if client side validation of (management)server's certificate can be skipped
            isDefault: true                           # treat current array as a default (would be used by storage classes without arrayID parameter)
            blockProtocol: "auto"                     # what SCSI transport protocol use on node side (FC, ISCSI, NVMeTCP, NVMeFC, None, or auto)
            nasName: "nas-server"                     # what NAS should be used for NFS volumes
            nfsAcls: "0777"                           # (Optional) defines permissions - POSIX mode bits or NFSv4 ACLs, to be set on NFS target mount directory.
                                                      # NFSv4 ACls are supported for NFSv4 shares on NFSv4 enabled NAS servers only. POSIX ACLs are not supported and only POSIX mode bits are supported for NFSv3 shares.
      # Example value for encoded
      # value: LSB1c2VybmFtZTogImFkbWluIgogIHBhc3N3b3JkOiAiUGFzc3dvcmQxMjMiCiAgc3lzdGVtSUQ6ICIyYjExYmIxM...

    driver:
      csiDriverType: "powerstore"
      csiDriverSpec:
        # in OCP <= 4.16 and K8s <= 1.29, fsGroupPolicy is an immutable field
        # fsGroupPolicy: Defines if the underlying volume supports changing ownership and permission of the volume before being mounted.
        # Allowed values: ReadWriteOnceWithFSType, File , None
        # Default value: ReadWriteOnceWithFSType
        fSGroupPolicy: "ReadWriteOnceWithFSType"
        # storageCapacity: Helps the scheduler to schedule the pod on a node satisfying the topology constraints, only if the requested capacity is available on the storage array
        # Allowed values:
        #   true: enable storage capacity tracking
        #   false: disable storage capacity tracking
        storageCapacity: true
      configVersion: v2.14.0
      # authSecret: This is the secret used to validate the default PowerStore secret used for installation
      # Allowed values: <metadataName specified in the Manifest>-config
      # For example: If the metadataName is set to powerstore, authSecret value should be set to powerstore-config
      authSecret: powerstore-config
      # Controller count
      # Allowed values: n, where n > 0
      # Default value: 2
      replicas: 2
      dnsPolicy: ClusterFirstWithHostNet
      forceRemoveDriver: true
      common:
        image: "quay.io/dell/container-storage-modules/csi-powerstore:v2.14.0"
        imagePullPolicy: IfNotPresent
        envs:
          - name: X_CSI_POWERSTORE_NODE_NAME_PREFIX
            value: "csi-node"
          - name: X_CSI_FC_PORTS_FILTER_FILE_PATH
            value: "/etc/fc-ports-filter"
          # Specify kubelet config dir path.
          # Ensure that the config.yaml file is present at this path.
          # Default value: /var/lib/kubelet
          - name: KUBELET_CONFIG_DIR
            value: /var/lib/kubelet
          - name: CSI_LOG_LEVEL
            value: info
          # GOPOWERSTORE_DEBUG: Enable/disable debug logs from gopowerstore library.
          # Default value: false
          - name: "GOPOWERSTORE_DEBUG"
            value: "false"
      sideCars:
        # 'csivol' represents a string prepended to each volume created by the CSI driver
        - name: provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
          args: ["--volume-name-prefix=csivol"]
        - name: attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
        - name: registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0
        - name: resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1
        - name: snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0
        - name: csi-metadata-retriever
          image: quay.io/dell/container-storage-modules/csi-metadata-retriever:v1.10.0
        # health monitor is disabled by default, refer to driver documentation before enabling it
        - name: external-health-monitor
          enabled: false
          args: ["--monitor-interval=60s"]
          image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.14.0
      # Uncomment the following to configure how often external-provisioner polls the driver to detect changed capacity
      # Configure only when the storageCapacity is set as "true"
      # Allowed values: 1m,2m,3m,...,10m,...,60m etc. Default value: 5m
      # - name: provisioner
      #  args: ["--capacity-poll-interval=5m"]

      controller:
        envs:
          # X_CSI_MULTI_NAS_FAILURE_THRESHOLD: Number of consecutive FS creation failures after which a NAS is put into cooldown.
          # If a NAS is in cooldown, it will not be considered for new FS creation attempts for cooldown period amount of time.
          # Allowed values: n, where n >= 0
          # Default value: "5"
          - name: X_CSI_MULTI_NAS_FAILURE_THRESHOLD
            value: "5"
          # X_CSI_MULTI_NAS_COOLDOWN_PERIOD: Duration for which a NAS remains in cooldown once the threshold is reached.
          # During this period, the NAS will not be considered for new FS creation attempts.
          # Allowed values: Number followed by unit (s,m,h) e.g. 60s,1m,2m,3m,...,1h etc
          # Default value: "5m"
          - name: X_CSI_MULTI_NAS_COOLDOWN_PERIOD
            value: "5m"
          # X_CSI_NFS_ACLS: enables setting permissions on NFS mount directory
          # This value will be the default value if a storage class and array config in secret
          # do not contain the NFS ACL (nfsAcls) parameter specified
          # Permissions can be specified in two formats:
          #   1) Unix mode (NFSv3)
          #   2) NFSv4 ACLs (NFSv4)
          #      NFSv4 ACLs are supported on NFSv4 share only.
          # Allowed values:
          #   1) Unix mode: valid octal mode number
          #      Examples: "0777", "777", "0755"
          #   2) NFSv4 acls: valid NFSv4 acls, seperated by comma
          #      Examples: "A::OWNER@:RWX,A::GROUP@:RWX", "A::OWNER@:rxtncy"
          # Optional: true
          # Default value: "0777"
          # nfsAcls: "0777"
          - name: X_CSI_NFS_ACLS
            value: "0777"
          # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from Controller plugin - volume condition.
          # Install the 'external-health-monitor' sidecar accordingly.
          # Allowed values:
          #   true: enable checking of health condition of CSI volumes
          #   false: disable checking of health condition of CSI volumes
          # Default value: false
          - name: X_CSI_HEALTH_MONITOR_ENABLED
            value: "false"
          # X_CSI_POWERSTORE_EXTERNAL_ACCESS: Allows to specify additional entries for hostAccess of NFS volumes. Both single IP address and subnet are valid entries.
          # Allowed Values: x.x.x.x/xx or x.x.x.x
          # Default Value:
          - name: X_CSI_POWERSTORE_EXTERNAL_ACCESS
            value:
        # nodeSelector: Define node selection constraints for controller pods.
        # For the pod to be eligible to run on a node, the node must have each
        # of the indicated key-value pairs as labels.
        # Leave as blank to consider all nodes
        # Allowed values: map of key-value pairs
        # Default value: None
        nodeSelector:
        # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
        #  node-role.kubernetes.io/control-plane: ""

        # tolerations: Define tolerations for the controllers, if required.
        # Leave as blank to install controller on worker nodes
        # Default value: None
        tolerations:
        # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
        # - key: "node-role.kubernetes.io/control-plane"
        #   operator: "Exists"
        #   effect: "NoSchedule"
      node:
        envs:
          # Set to "true" to enable ISCSI CHAP Authentication
          # CHAP password will be autogenerated by driver
          - name: "X_CSI_POWERSTORE_ENABLE_CHAP"
            value: "false"
          # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
          # Allowed values:
          #   true: enable checking of health condition of CSI volumes
          #   false: disable checking of health condition of CSI volumes
          # Default value: false
          - name: X_CSI_HEALTH_MONITOR_ENABLED
            value: "false"
          # X_CSI_POWERSTORE_MAX_VOLUMES_PER_NODE: Defines the maximum PowerStore volumes that can be created per node
          # Allowed values: Any value greater than or equal to 0
          # Default value: "0"
          - name: X_CSI_POWERSTORE_MAX_VOLUMES_PER_NODE
            value: "0"
        # nodeSelector: Define node selection constraints for node pods.
        # For the pod to be eligible to run on a node, the node must have each
        # of the indicated key-value pairs as labels.
        # Leave as blank to consider all nodes
        # Allowed values: map of key-value pairs
        # Default value: None
        nodeSelector:
        # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
        #  node-role.kubernetes.io/control-plane: ""

        # tolerations: Define tolerations for the controllers, if required.
        # Leave as blank to install controller on worker nodes
        # Default value: None
        tolerations:
        # Uncomment if nodes you wish to use have the node-role.kubernetes.io/control-plane taint
        # - key: "node-role.kubernetes.io/control-plane"
        #   operator: "Exists"
        #   effect: "NoSchedule"
        # Uncomment if CSM for Resiliency and CSI Driver pods monitor is enabled
        # - key: "offline.powerstore.storage.dell.com"
        #   operator: "Exists"
        #   effect: "NoSchedule"
        # - key: "powerstore.podmon.storage.dell.com"
        #   operator: "Exists"
        #   effect: "NoSchedule"
    modules:
      - name: resiliency
        # enabled: Enable/Disable Resiliency feature
        # Allowed values:
        #   true: enable Resiliency feature(deploy podmon sidecar)
        #   false: disable Resiliency feature(do not deploy podmon sidecar)
        # Default value: false
        enabled: false
        configVersion: v1.13.0
        components:
          - name: podmon-controller
            image: quay.io/dell/container-storage-modules/podmon:v1.13.0
            imagePullPolicy: IfNotPresent
            args:
              - "--labelvalue=csi-powerstore"
              - "--arrayConnectivityPollRate=60"
              - "--skipArrayConnectionValidation=false"
              - "--driverPodLabelValue=dell-storage"
              - "--ignoreVolumelessPods=false"
              - "--arrayConnectivityConnectionLossThreshold=3"
              # Below 4 args should not be modified.
              - "--csisock=unix:/var/run/csi/csi.sock"
              - "--mode=controller"
              - "--driver-config-params=/powerstore-config-params/driver-config-params.yaml"
              - "--driverPath=csi-powerstore.dellemc.com"
          - name: podmon-node
            image: quay.io/dell/container-storage-modules/podmon:v1.13.0
            imagePullPolicy: IfNotPresent
            envs:
              # podmonAPIPort: Defines the port to be used within the kubernetes cluster
              # Allowed values: Any valid and free port (string)
              # Default value: 8083
              - name: "X_CSI_PODMON_API_PORT"
                value: "8083"
            args:
              - "--labelvalue=csi-powerstore"
              - "--arrayConnectivityPollRate=60"
              - "--leaderelection=false"
              - "--driverPodLabelValue=dell-storage"
              - "--ignoreVolumelessPods=false"
              # Below 4 args should not be modified.
              - "--csisock=unix:/var/lib/kubelet/plugins/csi-powerstore.dellemc.com/csi_sock"
              - "--mode=node"
              - "--driver-config-params=/powerstore-config-params/driver-config-params.yaml"
              - "--driverPath=csi-powerstore.dellemc.com"

storageclass:
  name: powerstore
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  provisioner: csi-powerstore.dellemc.com
  # reclaimPolicy: PVs that are dynamically created by a StorageClass will have the reclaim policy specified here
  # Allowed values:
  #   Reclaim: retain the PV after PVC deletion
  #   Delete: delete the PV after PVC deletion
  # Optional: true
  # Default value: Delete
  reclaimPolicy: Delete
  # allowVolumeExpansion: allows the users to resize the volume by editing the corresponding PVC object
  # Allowed values:
  #   true: allow users to resize the PVC
  #   false: does not allow users to resize the PVC
  # Optional: true
  # Default value: false
  allowVolumeExpansion: true
  parameters:
    csi.storage.k8s.io/fstype: "ext4"
  # volumeBindingMode determines how volume binding and dynamic provisioning should occur
  # Allowed values: 
  #  Immediate: volume binding and dynamic provisioning occurs once PVC is created
  #  WaitForFirstConsumer: delay the binding and provisioning of PV until a pod using the PVC is created.
  #  Optional: false
  # Default value: WaitForFirstConsumer
  volumeBindingMode: WaitForFirstConsumer