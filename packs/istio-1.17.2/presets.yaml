presets:
  - name: "gateway-disabled"
    displayName: "Disable"
    group: "Gateway"
    remove: ["charts.gateway"]
    add: |
      charts:
        gateway:
          enabled: false

  - name: "gateway-enabled"
    displayName: "Enable"
    group: "Gateway"
    remove: []
    add: |
      charts:
        gateway:
          enabled: true
          # Name allows overriding the release name. Generally this should not be set
          name: ""
          # revision declares which revision this gateway is a part of
          revision: ""
      
          replicaCount: 1
          
          kind: Deployment
          
          rbac:
            # If enabled, roles will be created to enable accessing certificates from Gateways. This is not needed
            # when using http://gateway-api.org/.
            enabled: true
          
          serviceAccount:
            # If set, a service account will be created. Otherwise, the default is used
            create: true
            # Annotations to add to the service account
            annotations: {}
            # The name of the service account to use.
            # If not set, the release name is used
            name: ""
          
          podAnnotations:
            prometheus.io/port: "15020"
            prometheus.io/scrape: "true"
            prometheus.io/path: "/stats/prometheus"
            inject.istio.io/templates: "gateway"
            sidecar.istio.io/inject: "true"
          
          # Define the security context for the pod.
          # If unset, this will be automatically set to the minimum privileges required to bind to port 80 and 443.
          # On Kubernetes 1.22+, this only requires the `net.ipv4.ip_unprivileged_port_start` sysctl.
          securityContext: ~
          containerSecurityContext: ~
          
          service:
            # Type of service. Set to "None" to disable the service entirely
            type: LoadBalancer
            ports:
            - name: status-port
              port: 15021
              protocol: TCP 
              targetPort: 15021
            - name: http2
              port: 80
              protocol: TCP 
              targetPort: 80
            - name: https
              port: 443 
              protocol: TCP 
              targetPort: 443 
            annotations: {}
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            externalTrafficPolicy: ""
            externalIPs: []
          
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 1024Mi
          
          autoscaling:
            enabled: true
            minReplicas: 1
            maxReplicas: 5
            targetCPUUtilizationPercentage: 80
          
          # Pod environment variables
          env: {}
          
          # Labels to apply to all resources
          labels: {}
          
          # Annotations to apply to all resources
          annotations: {}
          
          nodeSelector: {}
          
          tolerations: []
          
          topologySpreadConstraints: []
          
          affinity: {}
          
          # If specified, the gateway will act as a network gateway for the given network.
          networkGateway: ""
          
          # Specify image pull policy if default behavior isn't desired.
          # Default behavior: latest images will be Always else IfNotPresent
          imagePullPolicy: ""
          
          imagePullSecrets: []

  - name: "kiali-disabled"
    displayName: "Disable"
    group: "Kiali Dashboard"
    remove: ["charts.kiali-server"]
    add: |
      charts:
        kiali-server:
          enabled: false

  - name: "kiali-enabled"
    displayName: "Enable"
    group: "Kiali Dashboard"
    remove: []
    add: |
      charts:
        kiali-server:
          enabled: true
          # 'fullnameOverride' is deprecated. Use 'deployment.instance_name' instead.
          # This is only supported for backward compatibility and will be removed in a future version.
          # If 'fullnameOverride' is not "kiali" and 'deployment.instance_name' is "kiali",
          # then 'deployment.instance_name' will take the value of 'fullnameOverride' value.
          # Otherwise, 'fullnameOverride' is ignored and 'deployment.instance_name' is used.
          fullnameOverride: "kiali"
          
          # This is required for "openshift" auth strategy.
          # You have to know ahead of time what your Route URL will be because
          # right now the helm chart can't figure this out at runtime (it would
          # need to wait for the Kiali Route to be deployed and for OpenShift
          # to start it up). If someone knows how to update this helm chart to
          # do this, a PR would be welcome.
          kiali_route_url: ""
          
          #
          # Settings that mimic the Kiali CR which are placed in the ConfigMap.
          # Note that only those values used by the Helm Chart will be here.
          #
          
          istio_namespace: "" # default is where Kiali is installed
          
          auth:
            openid: {}
            openshift: {}
            strategy: ""
          
          deployment:
            # This only limits what Kiali will attempt to see, but Kiali Service Account has permissions to see everything.
            # For more control over what the Kial Service Account can see, use the Kiali Operator
            accessible_namespaces:
            - "**"
            additional_service_yaml: {}
            affinity:
              node: {}
              pod: {}
              pod_anti: {}
            configmap_annotations: {}
            custom_secrets: []
            host_aliases: []
            hpa:
              api_version: "autoscaling/v2"
              spec: {}
            image_digest: "" # use "sha256" if image_version is a sha256 hash (do NOT prefix this value with a "@")
            image_name: quay.io/kiali/kiali
            image_pull_policy: "Always"
            image_pull_secrets: []
            image_version: v1.66.1 # version like "v1.39" (see: https://quay.io/repository/kiali/kiali?tab=tags) or a digest hash
            ingress:
              additional_labels: {}
              class_name: "nginx"
              #enabled:
              override_yaml:
                metadata: {}
            instance_name: "kiali"
            logger:
              log_format: "text"
              log_level: "info"
              time_field_format: "2006-01-02T15:04:05Z07:00"
              sampler_rate: "1" 
            node_selector: {}
            pod_annotations: {}
            pod_labels: {}
            priority_class_name: ""
            replicas: 1
            resources:
              requests:
                cpu: "10m"
                memory: "64Mi"
              limits:
                memory: "1Gi"
            secret_name: "kiali"
            security_context: {}
            service_annotations: {}
            service_type: ""
            tolerations: []
            version_label: v1.66.1 # v1.39 # v1.39.0 # see: https://quay.io/repository/kiali/kiali?tab=tags
            view_only_mode: false
          
          external_services:
            #prometheus:
            #  url: ""
            custom_dashboards:
              enabled: true
            istio:
              root_namespace: ""
          
          identity: {}
            #cert_file:
            #private_key_file:
          
          kiali_feature_flags:
            certificates_information_indicators:
              enabled: true
              secrets:
              - cacerts
              - istio-ca-secret
            clustering:
              autodetect_secrets:
                enabled: true
                label: "kiali.io/multiCluster=true"
              clusters: []
            disabled_features: []
            validations:
              ignore: ["KIA1201"]
          
          login_token:
            signing_key: ""
          
          server:
            port: 20001
            metrics_enabled: true
            metrics_port: 9090
            web_root: ""
